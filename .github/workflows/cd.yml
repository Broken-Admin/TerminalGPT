# WIP
# name: Continuous Deployment
# run-name: ${{ github.actor }} Continuous Deployment ðŸš€
# on: 
#   workflow_call:
#     inputs:
#       python-version:
#         description: 'Python version'
#         required: true
#         type: string
#       poetry-version:
#         description: 'Poetry version'
#         required: true
#         type: string
#       os:
#         description: 'OS'
#         required: true
#         type: string
# jobs:
#   release:
#     runs-on: ${{ inputs.os }}
#     steps:
#     - name: "Determine tag"
#       run: "echo \"RELEASE_TAG=${GITHUB_REF#refs/tags/}\" >> $GITHUB_ENV"

#     - name: "Create release"
#       uses: "actions/github-script@v6"
#       with:
#         github-token: "${{ secrets.GITHUB_TOKEN }}"
#         script: |
#           try {
#             const response = await github.rest.repos.createRelease({
#               draft: false,
#               generate_release_notes: true,
#               name: process.env.RELEASE_TAG,
#               owner: context.repo.owner,
#               prerelease: false,
#               repo: context.repo.repo,
#               tag_name: process.env.RELEASE_TAG,
#             });

#             core.exportVariable('RELEASE_ID', response.data.id);
#             core.exportVariable('RELEASE_UPLOAD_URL', response.data.upload_url);
#           } catch (error) {
#             core.setFailed(error.message);
#           }

  
  




        